-- Generated by Oracle SQL Developer Data Modeler 4.1.1.888
--   at:        2015-11-18 20:57:23 CST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




DROP TABLE F15E4Auth CASCADE CONSTRAINTS ;

DROP TABLE F15E4Cont CASCADE CONSTRAINTS ;

DROP TABLE F15E4Emp CASCADE CONSTRAINTS ;

DROP TABLE F15E4Lab CASCADE CONSTRAINTS ;

DROP TABLE F15E4RFE CASCADE CONSTRAINTS ;

DROP TABLE F15E4comm CASCADE CONSTRAINTS ;

DROP TABLE F15E4doc CASCADE CONSTRAINTS ;

DROP TABLE F15E4role_code CASCADE CONSTRAINTS ;

DROP TABLE F15E4stat_code CASCADE CONSTRAINTS ;

DROP TABLE F15E4status CASCADE CONSTRAINTS ;

DROP TABLE F15E4tasks CASCADE CONSTRAINTS ;

CREATE TABLE F15E4Auth
  ( auth_id INTEGER NOT NULL , RIGHT VARCHAR2 (10)
  ) ;
ALTER TABLE F15E4Auth ADD CONSTRAINT F15E4Auth_PK PRIMARY KEY ( auth_id ) ;


CREATE TABLE F15E4Cont
  (
    F15E4role_code_role_id INTEGER ,
    comm                   VARCHAR2 (4000) ,
    F15E4Emp_emp_id        INTEGER ,
    F15E4RFE_RFE_id        INTEGER
  ) ;


CREATE TABLE F15E4Emp
  (
    emp_id            INTEGER NOT NULL ,
    emp_name          VARCHAR2 (50) ,
    email             VARCHAR2 (100) ,
    office            VARCHAR2 (12) ,
    phone             VARCHAR2 (8) ,
    emp_status        VARCHAR2 (1) ,
    status_date       DATE ,
    type              VARCHAR2 (255) ,
    F15E4Auth_auth_id INTEGER ,
    F15E4Lab_lab_id   INTEGER
  ) ;
ALTER TABLE F15E4Emp ADD CONSTRAINT F15E4Emp_PK PRIMARY KEY ( emp_id ) ;


CREATE TABLE F15E4Lab
  ( lab_id INTEGER NOT NULL , lab_name VARCHAR2 (50)
  ) ;
ALTER TABLE F15E4Lab ADD CONSTRAINT F15E4Lab_PK PRIMARY KEY ( lab_id ) ;


CREATE TABLE F15E4RFE
  (
    RFE_id              INTEGER NOT NULL ,
    expl                VARCHAR2 (4000) ,
    alt_pro             VARCHAR2 (4000) ,
    review_date         DATE ,
    F15E4status_stat_id INTEGER ,
    F15E4Emp_emp_id     INTEGER
  ) ;
CREATE UNIQUE INDEX F15E4RFE__IDX ON F15E4RFE
  (
    F15E4status_stat_id ASC
  )
  ;
ALTER TABLE F15E4RFE ADD CONSTRAINT F15E4RFE_PK PRIMARY KEY ( RFE_id ) ;


CREATE TABLE F15E4comm
  (
    comm_id         INTEGER NOT NULL ,
    F15E4RFE_RFE_id INTEGER ,
    F15E4Emp_emp_id INTEGER
  ) ;
ALTER TABLE F15E4comm ADD CONSTRAINT F15E4comm_PK PRIMARY KEY ( comm_id ) ;


CREATE TABLE F15E4doc
  (
    doc_id        INTEGER NOT NULL ,
    filename      VARCHAR2 (4000 BYTE) ,
    file_mimetype VARCHAR2 (512) ,
    file_charset  VARCHAR2 (512) ,
    file_blob BLOB ,
    file_comments   VARCHAR2 (4000) ,
    tags            VARCHAR2 (4000) ,
    F15E4RFE_RFE_id INTEGER
  ) ;
ALTER TABLE F15E4doc ADD CONSTRAINT F15E4doc_PK PRIMARY KEY ( doc_id ) ;


CREATE TABLE F15E4role_code
  (
    role_id INTEGER NOT NULL ,
    role    VARCHAR2 (50) ,
    "desc"  VARCHAR2 (4000)
  ) ;
ALTER TABLE F15E4role_code ADD CONSTRAINT F15E4role_code_PK PRIMARY KEY ( role_id ) ;


CREATE TABLE F15E4stat_code
  (
    code_id INTEGER NOT NULL ,
    status  VARCHAR2 (40) ,
    "desc"  VARCHAR2 (500)
  ) ;
ALTER TABLE F15E4stat_code ADD CONSTRAINT F15E4stat_code_PK PRIMARY KEY ( code_id ) ;


CREATE TABLE F15E4status
  (
    stat_id                INTEGER NOT NULL ,
    F15E4stat_code_code_id INTEGER ,
    F15E4RFE_RFE_id        INTEGER
  ) ;
CREATE UNIQUE INDEX F15E4status__IDX ON F15E4status
  (
    F15E4RFE_RFE_id ASC
  )
  ;
ALTER TABLE F15E4status ADD CONSTRAINT F15E4status_PK PRIMARY KEY ( stat_id ) ;


CREATE TABLE F15E4tasks
  (
    task_id         INTEGER NOT NULL ,
    eff_date        DATE ,
    abbr            VARCHAR2 (20) ,
    "desc"          VARCHAR2 (4000) ,
    F15E4RFE_RFE_id INTEGER
  ) ;
ALTER TABLE F15E4tasks ADD CONSTRAINT F15E4tasks_PK PRIMARY KEY ( task_id ) ;


ALTER TABLE F15E4Cont ADD CONSTRAINT F15E4Cont_F15E4Emp_FK FOREIGN KEY ( F15E4Emp_emp_id ) REFERENCES F15E4Emp ( emp_id ) ;

ALTER TABLE F15E4Cont ADD CONSTRAINT F15E4Cont_F15E4RFE_FK FOREIGN KEY ( F15E4RFE_RFE_id ) REFERENCES F15E4RFE ( RFE_id ) ;

ALTER TABLE F15E4Cont ADD CONSTRAINT F15E4Cont_F15E4role_code_FK FOREIGN KEY ( F15E4role_code_role_id ) REFERENCES F15E4role_code ( role_id ) ;

ALTER TABLE F15E4Emp ADD CONSTRAINT F15E4Emp_F15E4Auth_FK FOREIGN KEY ( F15E4Auth_auth_id ) REFERENCES F15E4Auth ( auth_id ) ;

ALTER TABLE F15E4Emp ADD CONSTRAINT F15E4Emp_F15E4Lab_FK FOREIGN KEY ( F15E4Lab_lab_id ) REFERENCES F15E4Lab ( lab_id ) ;

ALTER TABLE F15E4RFE ADD CONSTRAINT F15E4RFE_F15E4Emp_FK FOREIGN KEY ( F15E4Emp_emp_id ) REFERENCES F15E4Emp ( emp_id ) ;

ALTER TABLE F15E4RFE ADD CONSTRAINT F15E4RFE_F15E4status_FK FOREIGN KEY ( F15E4status_stat_id ) REFERENCES F15E4status ( stat_id ) ;

ALTER TABLE F15E4comm ADD CONSTRAINT F15E4comm_F15E4Emp_FK FOREIGN KEY ( F15E4Emp_emp_id ) REFERENCES F15E4Emp ( emp_id ) ;

ALTER TABLE F15E4comm ADD CONSTRAINT F15E4comm_F15E4RFE_FK FOREIGN KEY ( F15E4RFE_RFE_id ) REFERENCES F15E4RFE ( RFE_id ) ;

ALTER TABLE F15E4doc ADD CONSTRAINT F15E4doc_F15E4RFE_FK FOREIGN KEY ( F15E4RFE_RFE_id ) REFERENCES F15E4RFE ( RFE_id ) ;

ALTER TABLE F15E4status ADD CONSTRAINT F15E4status_F15E4RFE_FK FOREIGN KEY ( F15E4RFE_RFE_id ) REFERENCES F15E4RFE ( RFE_id ) ;

ALTER TABLE F15E4status ADD CONSTRAINT F15E4status_F15E4stat_code_FK FOREIGN KEY ( F15E4stat_code_code_id ) REFERENCES F15E4stat_code ( code_id ) ;

ALTER TABLE F15E4tasks ADD CONSTRAINT F15E4tasks_F15E4RFE_FK FOREIGN KEY ( F15E4RFE_RFE_id ) REFERENCES F15E4RFE ( RFE_id ) ;


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             2
-- ALTER TABLE                             23
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


DROP SEQUENCE F15E4Auth_seq ; 
create sequence F15E4Auth_seq 
start with 100 
increment by 1 
nomaxvalue 
;
DROP TRIGGER F15E4Auth_PK_trig 
; 

create or replace trigger F15E4Auth_PK_trig 
before insert on F15E4Auth
for each row 
begin 
select F15E4Auth_seq.nextval into :new.auth_id from dual; 
end; 
/

DROP SEQUENCE F15E4Emp_seq ; 
create sequence F15E4Emp_seq 
start with 100 
increment by 1 
nomaxvalue 
;
DROP TRIGGER F15E4Emp_PK_trig 
; 

create or replace trigger F15E4Emp_PK_trig 
before insert on F15E4Emp
for each row 
begin 
select F15E4Emp_seq.nextval into :new.emp_id from dual; 
end; 
/

DROP SEQUENCE F15E4Lab_seq ; 
create sequence F15E4Lab_seq 
start with 100 
increment by 1 
nomaxvalue 
;
DROP TRIGGER F15E4Lab_PK_trig 
; 

create or replace trigger F15E4Lab_PK_trig 
before insert on F15E4Lab
for each row 
begin 
select F15E4Lab_seq.nextval into :new.lab_id from dual; 
end; 
/

DROP SEQUENCE F15E4RFE_seq ; 
create sequence F15E4RFE_seq 
start with 100 
increment by 1 
nomaxvalue 
;
DROP TRIGGER F15E4RFE_PK_trig 
; 

create or replace trigger F15E4RFE_PK_trig 
before insert on F15E4RFE
for each row 
begin 
select F15E4RFE_seq.nextval into :new.RFE_id from dual; 
end; 
/

DROP SEQUENCE F15E4comm_seq ; 
create sequence F15E4comm_seq 
start with 100 
increment by 1 
nomaxvalue 
;
DROP TRIGGER F15E4comm_PK_trig 
; 

create or replace trigger F15E4comm_PK_trig 
before insert on F15E4comm
for each row 
begin 
select F15E4comm_seq.nextval into :new.comm_id from dual; 
end; 
/

DROP SEQUENCE F15E4doc_seq ; 
create sequence F15E4doc_seq 
start with 100 
increment by 1 
nomaxvalue 
;
DROP TRIGGER F15E4doc_PK_trig 
; 

create or replace trigger F15E4doc_PK_trig 
before insert on F15E4doc
for each row 
begin 
select F15E4doc_seq.nextval into :new.doc_id from dual; 
end; 
/

DROP SEQUENCE F15E4role_code_seq ; 
create sequence F15E4role_code_seq 
start with 100 
increment by 1 
nomaxvalue 
;
DROP TRIGGER F15E4role_code_PK_trig 
; 

create or replace trigger F15E4role_code_PK_trig 
before insert on F15E4role_code
for each row 
begin 
select F15E4role_code_seq.nextval into :new.role_id from dual; 
end; 
/

DROP SEQUENCE F15E4stat_code_seq ; 
create sequence F15E4stat_code_seq 
start with 100 
increment by 1 
nomaxvalue 
;
DROP TRIGGER F15E4stat_code_PK_trig 
; 

create or replace trigger F15E4stat_code_PK_trig 
before insert on F15E4stat_code
for each row 
begin 
select F15E4stat_code_seq.nextval into :new.code_id from dual; 
end; 
/

DROP SEQUENCE F15E4status_seq ; 
create sequence F15E4status_seq 
start with 100 
increment by 1 
nomaxvalue 
;
DROP TRIGGER F15E4status_PK_trig 
; 

create or replace trigger F15E4status_PK_trig 
before insert on F15E4status
for each row 
begin 
select F15E4status_seq.nextval into :new.stat_id from dual; 
end; 
/

DROP SEQUENCE F15E4tasks_seq ; 
create sequence F15E4tasks_seq 
start with 100 
increment by 1 
nomaxvalue 
;
DROP TRIGGER F15E4tasks_PK_trig 
; 

create or replace trigger F15E4tasks_PK_trig 
before insert on F15E4tasks
for each row 
begin 
select F15E4tasks_seq.nextval into :new.task_id from dual; 
end; 
/

DROP INDEX F15E4Emp_emp_id_FK_0 ;
CREATE INDEX F15E4Emp_emp_id_FK_0 ON F15E4Cont(F15E4Emp_emp_id) ;
DROP INDEX F15E4RFE_RFE_id_FK_1 ;
CREATE INDEX F15E4RFE_RFE_id_FK_1 ON F15E4Cont(F15E4RFE_RFE_id) ;
DROP INDEX F15E4role_code_role_id_FK_2 ;
CREATE INDEX F15E4role_code_role_id_FK_2 ON F15E4Cont(F15E4role_code_role_id) ;
DROP INDEX F15E4Auth_auth_id_FK_3 ;
CREATE INDEX F15E4Auth_auth_id_FK_3 ON F15E4Emp(F15E4Auth_auth_id) ;
DROP INDEX F15E4Lab_lab_id_FK_4 ;
CREATE INDEX F15E4Lab_lab_id_FK_4 ON F15E4Emp(F15E4Lab_lab_id) ;
DROP INDEX F15E4Emp_emp_id_FK_5 ;
CREATE INDEX F15E4Emp_emp_id_FK_5 ON F15E4RFE(F15E4Emp_emp_id) ;
DROP INDEX F15E4status_stat_id_FK_6 ;
CREATE INDEX F15E4status_stat_id_FK_6 ON F15E4RFE(F15E4status_stat_id) ;
DROP INDEX F15E4Emp_emp_id_FK_7 ;
CREATE INDEX F15E4Emp_emp_id_FK_7 ON F15E4comm(F15E4Emp_emp_id) ;
DROP INDEX F15E4RFE_RFE_id_FK_8 ;
CREATE INDEX F15E4RFE_RFE_id_FK_8 ON F15E4comm(F15E4RFE_RFE_id) ;
DROP INDEX F15E4RFE_RFE_id_FK_9 ;
CREATE INDEX F15E4RFE_RFE_id_FK_9 ON F15E4doc(F15E4RFE_RFE_id) ;
DROP INDEX F15E4RFE_RFE_id_FK_10 ;
CREATE INDEX F15E4RFE_RFE_id_FK_10 ON F15E4status(F15E4RFE_RFE_id) ;
DROP INDEX F15E4stat_code_code_id_FK_11 ;
CREATE INDEX F15E4stat_code_code_id_FK_11 ON F15E4status(F15E4stat_code_code_id) ;
DROP INDEX F15E4RFE_RFE_id_FK_12 ;
CREATE INDEX F15E4RFE_RFE_id_FK_12 ON F15E4tasks(F15E4RFE_RFE_id) ;

DROP SEQUENCE F15E4Auth_seq ; 
create sequence F15E4Auth_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15E4Auth_PK_trig 
before insert on F15E4Auth
for each row 
begin 
select F15E4Auth_seq.nextval into :new.auth_id from dual; 
end; 
/
alter table F15E4Auth add created date ; 
alter table F15E4Auth add created_by VARCHAR2 (255) ; 
alter table F15E4Auth add row_version_number integer ; 
alter table F15E4Auth add updated date ; 
alter table F15E4Auth add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15E4Auth_AUD_trig 
before insert or update on F15E4Auth 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15E4Emp_seq ; 
create sequence F15E4Emp_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15E4Emp_PK_trig 
before insert on F15E4Emp
for each row 
begin 
select F15E4Emp_seq.nextval into :new.emp_id from dual; 
end; 
/
alter table F15E4Emp add created date ; 
alter table F15E4Emp add created_by VARCHAR2 (255) ; 
alter table F15E4Emp add row_version_number integer ; 
alter table F15E4Emp add updated date ; 
alter table F15E4Emp add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15E4Emp_AUD_trig 
before insert or update on F15E4Emp 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15E4Lab_seq ; 
create sequence F15E4Lab_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15E4Lab_PK_trig 
before insert on F15E4Lab
for each row 
begin 
select F15E4Lab_seq.nextval into :new.lab_id from dual; 
end; 
/
alter table F15E4Lab add created date ; 
alter table F15E4Lab add created_by VARCHAR2 (255) ; 
alter table F15E4Lab add row_version_number integer ; 
alter table F15E4Lab add updated date ; 
alter table F15E4Lab add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15E4Lab_AUD_trig 
before insert or update on F15E4Lab 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15E4RFE_seq ; 
create sequence F15E4RFE_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15E4RFE_PK_trig 
before insert on F15E4RFE
for each row 
begin 
select F15E4RFE_seq.nextval into :new.RFE_id from dual; 
end; 
/
alter table F15E4RFE add created date ; 
alter table F15E4RFE add created_by VARCHAR2 (255) ; 
alter table F15E4RFE add row_version_number integer ; 
alter table F15E4RFE add updated date ; 
alter table F15E4RFE add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15E4RFE_AUD_trig 
before insert or update on F15E4RFE 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15E4comm_seq ; 
create sequence F15E4comm_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15E4comm_PK_trig 
before insert on F15E4comm
for each row 
begin 
select F15E4comm_seq.nextval into :new.comm_id from dual; 
end; 
/
alter table F15E4comm add created date ; 
alter table F15E4comm add created_by VARCHAR2 (255) ; 
alter table F15E4comm add row_version_number integer ; 
alter table F15E4comm add updated date ; 
alter table F15E4comm add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15E4comm_AUD_trig 
before insert or update on F15E4comm 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15E4doc_seq ; 
create sequence F15E4doc_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15E4doc_PK_trig 
before insert on F15E4doc
for each row 
begin 
select F15E4doc_seq.nextval into :new.doc_id from dual; 
end; 
/
alter table F15E4doc add created date ; 
alter table F15E4doc add created_by VARCHAR2 (255) ; 
alter table F15E4doc add row_version_number integer ; 
alter table F15E4doc add updated date ; 
alter table F15E4doc add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15E4doc_AUD_trig 
before insert or update on F15E4doc 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15E4role_code_seq ; 
create sequence F15E4role_code_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15E4role_code_PK_trig 
before insert on F15E4role_code
for each row 
begin 
select F15E4role_code_seq.nextval into :new.role_id from dual; 
end; 
/
alter table F15E4role_code add created date ; 
alter table F15E4role_code add created_by VARCHAR2 (255) ; 
alter table F15E4role_code add row_version_number integer ; 
alter table F15E4role_code add updated date ; 
alter table F15E4role_code add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15E4role_code_AUD_trig 
before insert or update on F15E4role_code 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15E4stat_code_seq ; 
create sequence F15E4stat_code_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15E4stat_code_PK_trig 
before insert on F15E4stat_code
for each row 
begin 
select F15E4stat_code_seq.nextval into :new.code_id from dual; 
end; 
/
alter table F15E4stat_code add created date ; 
alter table F15E4stat_code add created_by VARCHAR2 (255) ; 
alter table F15E4stat_code add row_version_number integer ; 
alter table F15E4stat_code add updated date ; 
alter table F15E4stat_code add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15E4stat_code_AUD_trig 
before insert or update on F15E4stat_code 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15E4status_seq ; 
create sequence F15E4status_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15E4status_PK_trig 
before insert on F15E4status
for each row 
begin 
select F15E4status_seq.nextval into :new.stat_id from dual; 
end; 
/
alter table F15E4status add created date ; 
alter table F15E4status add created_by VARCHAR2 (255) ; 
alter table F15E4status add row_version_number integer ; 
alter table F15E4status add updated date ; 
alter table F15E4status add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15E4status_AUD_trig 
before insert or update on F15E4status 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15E4tasks_seq ; 
create sequence F15E4tasks_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15E4tasks_PK_trig 
before insert on F15E4tasks
for each row 
begin 
select F15E4tasks_seq.nextval into :new.task_id from dual; 
end; 
/
alter table F15E4tasks add created date ; 
alter table F15E4tasks add created_by VARCHAR2 (255) ; 
alter table F15E4tasks add row_version_number integer ; 
alter table F15E4tasks add updated date ; 
alter table F15E4tasks add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15E4tasks_AUD_trig 
before insert or update on F15E4tasks 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP INDEX F15E4Emp_emp_id_FK_0 ;
CREATE INDEX F15E4Emp_emp_id_FK_0 ON F15E4Cont(F15E4Emp_emp_id) ;
DROP INDEX F15E4RFE_RFE_id_FK_1 ;
CREATE INDEX F15E4RFE_RFE_id_FK_1 ON F15E4Cont(F15E4RFE_RFE_id) ;
DROP INDEX F15E4role_code_role_id_FK_2 ;
CREATE INDEX F15E4role_code_role_id_FK_2 ON F15E4Cont(F15E4role_code_role_id) ;
DROP INDEX F15E4Auth_auth_id_FK_3 ;
CREATE INDEX F15E4Auth_auth_id_FK_3 ON F15E4Emp(F15E4Auth_auth_id) ;
DROP INDEX F15E4Lab_lab_id_FK_4 ;
CREATE INDEX F15E4Lab_lab_id_FK_4 ON F15E4Emp(F15E4Lab_lab_id) ;
DROP INDEX F15E4Emp_emp_id_FK_5 ;
CREATE INDEX F15E4Emp_emp_id_FK_5 ON F15E4RFE(F15E4Emp_emp_id) ;
DROP INDEX F15E4status_stat_id_FK_6 ;
CREATE INDEX F15E4status_stat_id_FK_6 ON F15E4RFE(F15E4status_stat_id) ;
DROP INDEX F15E4Emp_emp_id_FK_7 ;
CREATE INDEX F15E4Emp_emp_id_FK_7 ON F15E4comm(F15E4Emp_emp_id) ;
DROP INDEX F15E4RFE_RFE_id_FK_8 ;
CREATE INDEX F15E4RFE_RFE_id_FK_8 ON F15E4comm(F15E4RFE_RFE_id) ;
DROP INDEX F15E4RFE_RFE_id_FK_9 ;
CREATE INDEX F15E4RFE_RFE_id_FK_9 ON F15E4doc(F15E4RFE_RFE_id) ;
DROP INDEX F15E4RFE_RFE_id_FK_10 ;
CREATE INDEX F15E4RFE_RFE_id_FK_10 ON F15E4status(F15E4RFE_RFE_id) ;
DROP INDEX F15E4stat_code_code_id_FK_11 ;
CREATE INDEX F15E4stat_code_code_id_FK_11 ON F15E4status(F15E4stat_code_code_id) ;
DROP INDEX F15E4RFE_RFE_id_FK_12 ;
CREATE INDEX F15E4RFE_RFE_id_FK_12 ON F15E4tasks(F15E4RFE_RFE_id) ;

